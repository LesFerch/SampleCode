<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" http-equiv="X-UA-Compatible" content="IE=9">
<hta:application
  id=oHTA
  icon=winmgmt.exe
  maximizebutton=no
  scroll=no
>
<script language="VBScript">
Const DefaultWait = 2.5 'minutes
Const ShutdownCmd = "Shutdown.exe -f"
Const RestartCmd = "Shutdown.exe -r -f"
Const Restart = True
Const Unattended = True
Const TestMode = False
Const HKCU = &H80000001

Set oWSH = CreateObject("Wscript.Shell")
Set oFSO = CreateObject("Scripting.FileSystemObject")
Set oReg = GetObject("winmgmts:\\.\root\default:StdRegProv")
Dim TimeLeftInSeconds,WaitTimer,Wait,PrevWait

MyPath  = Mid(document.URL,8)
MyName = oFSO.GetFileName(MyPath)
MyFolder = oFSO.GetParentFolderName(MyPath)
oWSH.CurrentDirectory = MyFolder

document.Title = MyName
Scale = GetScale()
w = 400 * Scale: h = 350 * Scale
Window.ResizeTo w, h
Window.MoveTo (screen.availWidth - w)/2, (screen.availHeight - h)/2

Sub window_onLoad
  ShutdownOption(0).style.zoom = Scale
  ShutdownOption(1).style.zoom = Scale
  Wait = DefaultWait
  WaitBox.Value = Wait
  TimeLeftInSeconds = Wait * 60
  WaitBox.select
  If Unattended Then
    UpdateCountdown
    WaitTimer = Window.SetInterval("UpdateCountdown()", 1000)
  End If
  ShutdownOption(0).checked = True
  If Restart Then ShutdownOption(1).checked = True
End Sub

Sub document_onKeyDown
  If window.event.keyCode=13 Then RestartCountdown
End Sub

Sub ReSelectInput
  WaitBox.select
End Sub

Sub UpdateCountdown
  Hours = CInt(TimeLeftInSeconds \ 3600)
  Minutes = CInt((TimeLeftInSeconds Mod 3600) \ 60)
  Seconds = TimeLeftInSeconds Mod 60
  CountDown.innerHTML = Hours & ":" & Right("0" & Minutes,2) & ":" & Right("0" & Seconds,2)
  If TimeLeftInSeconds<=0 Then
    Cmd = ShutdownCmd
    If ShutdownOption(1).checked Then Cmd = RestartCmd
    If TestMode Then
      MsgBox Cmd
    Else
      oWSH.Run Cmd,1,False
    End If
    self.Close
    Exit Sub
  End If
  TimeLeftInSeconds = TimeLeftInSeconds - 1
End Sub

Sub RestartCountdown
  If WaitTimer="" Then WaitTimer = Window.SetInterval("UpdateCountdown()", 1000)
  WaitBox.select
  If Not IsNumeric(Replace(WaitBox.Value,":",".")) Then
    WaitBox.Value = PrevWait
    WaitBox.select
    Exit Sub
  End If
  PrevWait = WaitBox.Value
  Wait = WaitBox.Value
  If InStr(Wait,":")>0 Then
    aWait = Split(Wait,":")
    Wait = aWait(0)*60 + aWait(1)
  End If
  TimeLeftInSeconds = Wait * 60
  UpdateCountdown
End Sub

Function GetScale()
  GetScale = 1.0
  Value = oWSH.RegRead("HKCU\Control Panel\Desktop\WindowMetrics\AppliedDPI")
  If Value > 96 Then
    'Custom scaling is set
    GetScale = Value/96
  Else
    'See if standard scaling is set
    Key = "Control Panel\Desktop\PerMonitorSettings"
    Result = oReg.EnumKey(HKCU, Key, ArrKeys)
    If Result=0 Then
      'Assume first monitor in list is the one we want
      For Each SubKey In ArrKeys
        Exit For
      Next
      Value = oWSH.RegRead("HKCU\" & Key & "\" & SubKey & "\DPIValue")
      If Value>0 Then GetScale = 1 + (Value * 0.25)
    End If
  End If
End Function

</script>
<style>
  body {background-color:Lavender; font-family:Segoe UI; font-size:11pt}
  h2 {color:red}
  .button {width:6em}
  .radio {vertical-align:bottom}
</style>
</head>
<body>
  <h1 id=CountDown>&nbsp</h1>
  Enter amount of time to wait before shutting down<br><br>
  Enter a value in minutes or hours:minutes<br><br>
  0 = Shutdown immediately<br><br>
  Click X to abort the shutdown<br><br>
  <input type=text size=8 id=WaitBox>
  <input type=button class=button id=OKButton value="OK" onClick=RestartCountdown()><br><br>
  <input type=radio class=radio name=ShutdownOption onClick=ReSelectInput()>Shutdown&nbsp
  <input type=radio class=radio name=ShutdownOption onClick=ReSelectInput()>Restart
</body>
</html>